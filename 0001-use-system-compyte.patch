From f7d34a2760c90f99fc5320ab8acd0aca141e449b Mon Sep 17 00:00:00 2001
From: Igor Gnatenko <i.gnatenko.brain@gmail.com>
Date: Sat, 24 Oct 2015 12:51:23 +0200
Subject: [PATCH 1/3] use system compyte

Signed-off-by: Igor Gnatenko <i.gnatenko.brain@gmail.com>
---
 pyopencl/array.py     |  2 +-
 pyopencl/cffi_cl.py   |  2 +-
 pyopencl/reduction.py |  2 +-
 pyopencl/tools.py     | 10 +++++-----
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/pyopencl/array.py b/pyopencl/array.py
index e7a7b78..63dc58d 100644
--- a/pyopencl/array.py
+++ b/pyopencl/array.py
@@ -34,7 +34,7 @@ import numpy as np
 import pyopencl.elementwise as elementwise
 import pyopencl as cl
 from pytools import memoize_method
-from pyopencl.compyte.array import (
+from compyte.array import (
         as_strided as _as_strided,
         f_contiguous_strides as _f_contiguous_strides,
         c_contiguous_strides as _c_contiguous_strides,
diff --git a/pyopencl/cffi_cl.py b/pyopencl/cffi_cl.py
index ecb4239..d704718 100644
--- a/pyopencl/cffi_cl.py
+++ b/pyopencl/cffi_cl.py
@@ -34,7 +34,7 @@ import numpy as np
 import sys
 
 from pyopencl._cffi import ffi as _ffi
-from .compyte.array import f_contiguous_strides, c_contiguous_strides
+from compyte.array import f_contiguous_strides, c_contiguous_strides
 
 
 from pyopencl._cffi import lib as _lib
diff --git a/pyopencl/reduction.py b/pyopencl/reduction.py
index 689763f..7ae005d 100644
--- a/pyopencl/reduction.py
+++ b/pyopencl/reduction.py
@@ -446,7 +446,7 @@ def _get_dot_expr(dtype_out, dtype_a, dtype_b, conjugate_first,
             dtype_b = dtype_a
 
     if dtype_out is None:
-        from pyopencl.compyte.array import get_common_dtype
+        from compyte.array import get_common_dtype
         dtype_out = get_common_dtype(
                 dtype_a.type(0), dtype_b.type(0),
                 has_double_support)
diff --git a/pyopencl/tools.py b/pyopencl/tools.py
index ac991d6..82f7f92 100644
--- a/pyopencl/tools.py
+++ b/pyopencl/tools.py
@@ -39,13 +39,13 @@ from pyopencl.cffi_cl import _lib
 
 import re
 
-from pyopencl.compyte.dtypes import (  # noqa
+from compyte.dtypes import (  # noqa
         get_or_register_dtype, TypeNameNotKnown,
         register_dtype, dtype_to_ctype)
 
 
 def _register_types():
-    from pyopencl.compyte.dtypes import (
+    from compyte.dtypes import (
             TYPE_REGISTRY, fill_registry_with_opencl_c_types)
 
     fill_registry_with_opencl_c_types(TYPE_REGISTRY)
@@ -338,7 +338,7 @@ def parse_c_arg(c_arg, with_offset=False):
     else:
         vec_arg_factory = VectorArg
 
-    from pyopencl.compyte.dtypes import parse_c_arg_backend
+    from compyte.dtypes import parse_c_arg_backend
     return parse_c_arg_backend(c_arg, ScalarArg, vec_arg_factory)
 
 
@@ -760,7 +760,7 @@ class _TemplateRenderer(object):
             try:
                 return self.type_aliases[typename]
             except KeyError:
-                from pyopencl.compyte.dtypes import NAME_TO_DTYPE
+                from compyte.dtypes import NAME_TO_DTYPE
                 return NAME_TO_DTYPE[typename]
         else:
             return np.dtype(typename)
@@ -798,7 +798,7 @@ class _TemplateRenderer(object):
         else:
             vec_arg_factory = _VectorArgPlaceholder
 
-        from pyopencl.compyte.dtypes import parse_c_arg_backend
+        from compyte.dtypes import parse_c_arg_backend
         parsed_args = []
         for arg in all_args:
             if isinstance(arg, str):
-- 
2.4.3

