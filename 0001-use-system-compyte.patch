From eb8220bae3c2c2f86cea2b01075e2703b4d564ca Mon Sep 17 00:00:00 2001
From: Igor Gnatenko <i.gnatenko.brain@gmail.com>
Date: Sat, 24 Oct 2015 12:51:23 +0200
Subject: [PATCH 1/3] use system compyte

Signed-off-by: Igor Gnatenko <i.gnatenko.brain@gmail.com>
---
 pyopencl/array.py     |  2 +-
 pyopencl/reduction.py |  2 +-
 pyopencl/tools.py     | 10 +++++-----
 setup.py              |  2 +-
 4 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/pyopencl/array.py b/pyopencl/array.py
index 8d29b6c..a322f9d 100644
--- a/pyopencl/array.py
+++ b/pyopencl/array.py
@@ -32,7 +32,7 @@ import numpy as np
 import pyopencl.elementwise as elementwise
 import pyopencl as cl
 from pytools import memoize_method
-from pyopencl.compyte.array import (
+from compyte.array import (
         as_strided as _as_strided,
         f_contiguous_strides as _f_contiguous_strides,
         c_contiguous_strides as _c_contiguous_strides,
diff --git a/pyopencl/reduction.py b/pyopencl/reduction.py
index ba7c6dc..0f0aa35 100644
--- a/pyopencl/reduction.py
+++ b/pyopencl/reduction.py
@@ -487,7 +487,7 @@ def _get_dot_expr(dtype_out, dtype_a, dtype_b, conjugate_first,
             dtype_b = dtype_a
 
     if dtype_out is None:
-        from pyopencl.compyte.array import get_common_dtype
+        from compyte.array import get_common_dtype
         dtype_out = get_common_dtype(
                 dtype_a.type(0), dtype_b.type(0),
                 has_double_support)
diff --git a/pyopencl/tools.py b/pyopencl/tools.py
index 32aa8e6..4652f2e 100644
--- a/pyopencl/tools.py
+++ b/pyopencl/tools.py
@@ -35,13 +35,13 @@ from pytools import memoize, memoize_method
 
 import re
 
-from pyopencl.compyte.dtypes import (  # noqa
+from compyte.dtypes import (  # noqa
         get_or_register_dtype, TypeNameNotKnown,
         register_dtype, dtype_to_ctype)
 
 
 def _register_types():
-    from pyopencl.compyte.dtypes import _fill_dtype_registry
+    from compyte.dtypes import _fill_dtype_registry
     import struct
 
     _fill_dtype_registry(respect_windows=False, include_bool=False)
@@ -357,7 +357,7 @@ def parse_c_arg(c_arg, with_offset=False):
     else:
         vec_arg_factory = VectorArg
 
-    from pyopencl.compyte.dtypes import parse_c_arg_backend
+    from compyte.dtypes import parse_c_arg_backend
     return parse_c_arg_backend(c_arg, ScalarArg, vec_arg_factory)
 
 
@@ -779,7 +779,7 @@ class _TemplateRenderer(object):
             try:
                 return self.type_aliases[typename]
             except KeyError:
-                from pyopencl.compyte.dtypes import NAME_TO_DTYPE
+                from compyte.dtypes import NAME_TO_DTYPE
                 return NAME_TO_DTYPE[typename]
         else:
             return np.dtype(typename)
@@ -817,7 +817,7 @@ class _TemplateRenderer(object):
         else:
             vec_arg_factory = _VectorArgPlaceholder
 
-        from pyopencl.compyte.dtypes import parse_c_arg_backend
+        from compyte.dtypes import parse_c_arg_backend
         parsed_args = []
         for arg in all_args:
             if isinstance(arg, str):
diff --git a/setup.py b/setup.py
index 24248cc..9e37c34 100644
--- a/setup.py
+++ b/setup.py
@@ -198,7 +198,7 @@ def main():
                 ],
 
             # build info
-            packages=["pyopencl", "pyopencl.characterize", "pyopencl.compyte"],
+            packages=["pyopencl", "pyopencl.characterize"],
 
             setup_requires=[
                 "numpy",
-- 
2.6.2

